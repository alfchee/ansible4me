---
- hosts: localhost
  vars:
    docker_old:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    docker_deps:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg 
      - lsb-release
      - software-properties-common
    docker_packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io

  tasks:
    - name: Install NVM
      shell: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
      args:
        executable: /bin/bash
        chdir: "{{ ansible_env.HOME }}"
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: Load NVM
      blockinfile:
        path: "~/.bashrc"
        block: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

    - name: Install Node 14.17.5 LTS
      shell: ". {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install 14.17.5"
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/versions/node"
        chdir: "{{ ansible_env.HOME }}"
        executable: /bin/bash

    - name: Uninstall old versions Docker packages
      apt:
        name: "{{ docker_old }}"
        state: absent
      become: yes

    - name: Install needed packages
      apt:
        name: "{{ docker_deps }}"
        update_cache: yes
        state: present
      become: yes

    - name: Add Docker's Official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: yes

    - name: Add Docker Repo
      apt_repository:
        repo: deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu focal stable
        state: present
      become: yes

    - name: Install Docker
      apt:
        name: "{{ docker_packages }}"
        state: latest
      become: yes
    - name: Verify Docker install
      shell: docker run hello-world
      become: yes

    - name: Allow current user to use Docker
      shell: "usermod -aG docker $USER"
      become: yes

    # - name: Installing Serverless
    #   npm:
    #     name: serverless
    #     global: yes
    #     state: present

    - name: Download Kubectl Binary
      shell: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      args:
        executable: /bin/bash
        chdir: "{{ ansible_env.HOME }}"
        creates: "{{ ansible_env.HOME }}/kubectl"

    - name: Install Kubectl
      shell: |
        install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      args:
        executable: /bin/bash
      become: yes

    - name: Install AZ CLI
      shell: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      become: yes

    - name: Add Google Cloud public key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      become: yes

    - name: Add Google Repo
      apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main
        state: present
      become: yes
    
    - name: Install gcloud CLI
      apt:
        pkg:
          - google-cloud-sdk
          - google-cloud-sdk-app-engine-python
        state: latest
        update_cache: yes
      become: yes
